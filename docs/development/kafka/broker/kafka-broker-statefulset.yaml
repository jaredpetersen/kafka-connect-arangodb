apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker
  namespace: kafka-connect-arangodb-dev
spec:
  selector:
    matchLabels:
      app: kafka-broker
  serviceName: kafka-broker
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: kafka-broker
        image: confluentinc/cp-enterprise-kafka:5.1.0
        command:
        - sh
        - -exc
        - |
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker-0:9092,PLAINTEXT_HOST://localhost:29092 && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-broker-headless.${POD_NAMESPACE}:9092{{ include "cp-kafka.configuration.advertised.listeners" . }} && \
          exec /etc/confluent/docker/run
        ports:
        - name: broker
          containerPort: 9092
        - name: broker-host
          containerPort: 29092
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-client:2181
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://broker-0:9092,PLAINTEXT_HOST://localhost:29092
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_METRIC_REPORTERS
          value: io.confluent.metrics.reporter.ConfluentMetricsReporter
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: broker:9092
        - name: CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT
          value: zookeeper:${ZOOKEEPER_PORT}
        - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
          value: "1"
        - name: CONFLUENT_METRICS_ENABLE
          value: 'true'
        - name: CONFLUENT_SUPPORT_CUSTOMER_ID
          value: anonymous
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi